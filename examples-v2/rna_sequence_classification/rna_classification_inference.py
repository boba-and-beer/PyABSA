# -*- coding: utf-8 -*-
# file: inference.py
# time: 23/10/2022 15:10
# author: yangheng <hy345@exeter.ac.uk>
# github: https://github.com/yangheng95
# GScholar: https://scholar.google.com/citations?user=NPq5a_0AAAAJ&hl=en
# ResearchGate: https://www.researchgate.net/profile/Heng-Yang-17/research
# Copyright (C) 2021. All Rights Reserved.

from pyabsa import TCDatasetList, RNARCheckpointManager
from pyabsa.functional.dataset import DatasetItem

model_path = 'bert_decay_rate_r2_0.5378'  # 'lstm' is a keyword to search the checkpoint in the folder
model_path = 'bert_decay_rate_r2_0.2213'  # 'lstm' is a keyword to search the checkpoint in the folder
# model_path = 'lstm_decay_rate_r2_0.1921'  # 'lstm' is a keyword to search the checkpoint in the folder
# model_path = 'mhsa_decay_rate_r2_0.2213'  # 'lstm' is a keyword to search the checkpoint in the folder
model_path = 'lstm_decay_rate_r2_0.4517'  # 'lstm' is a keyword to search the checkpoint in the folder
rna_regressor = RNARCheckpointManager.get_rna_regressor(checkpoint=model_path)

# batch inference works on the dataset files
inference_sets = 'integrated_datasets/rnar_datasets/decay_rate/decay_rate.tsv.test.dat.inference'
# inference_sets = 'integrated_datasets/rnar_datasets/decay_rate/decay_rate.tsv.train.dat.inference'
results = rna_regressor.batch_predict(target_file=inference_sets,
                                      print_result=True,
                                      save_result=True,
                                      ignore_error=False,
                                      )

# RNA = 'AT1G02900.1	1.7535802523513275	1.6468826983093234	1.4996923072220618	1.5216332933162973' \
#       '	AGAAAATGGACAAGTCCTTTACTCTGTTCTTAACTCTTACGATTCTCGTCGTCTTCATCATCTCTTCACCTCCGGTCCAAGCCGGCTTCGCCAA' \
#       'CGACCTCGGTGGTGTAGCATGGGCTACGACTGGAGACAATGGTTCAGGCTGCCACGGTTCAATAGCAGAGTGTATCGGGGCGGAGGAAGAAGAAATGGA' \
#       'CTCAGAGATCAATAGAAGAATATTGGCGACCACAAAATACATAAGCTATCAGTCTTTGAAACGGAACAGTGTGCCTTGTTCAAGAAGAGGTGCGTCTTA' \
#       'TTACAATTGTCAGAACGGAGCTCAGGCTAATCCTTATAGTCGTGGTTGCAGCAAAATTGCTCGTTGCAGGAGTTAGACCTACAAACAAGAAAGCTATC' \
#       'TTCTTGATCTTGACTTATGTTTTCTTTGATCCATCAAGCGTTTTCATTTTAATTAAATCTTTAAATATTCATCATGTCTCTGCACAATAGTAAAGACCTA' \
#       'TGTTTTGATCAAATTGGGTTGATTTGTAATATTTTATGTGAATAATCATGGTCTTAATGATCCATGAAGTTGTTTGGTTTTTAATTATT'
# RNA = 'AT1G13390.1	0	0	0	0	AAAATTAAATTTCATAAGCAGAGAATTAAATATTTTTAGCTAAAATAAGCGTTTTGCTCTAAACACAAACAATTATACCTTGTTAGAGATATTAAGAAAAACAAATAAATAAATACTGATTCCATAGCATTTGTTGTCTGCAGGTTCTCTCTTTCCCTTAACCTCAAAAGCCATTTAGACTCTTCTTCTCTCTTTCAGATCTCTCTTCTTCTTCTGTTTCTTCTGCTCACGTAGAGCACAAACAAGCCAAGAACCATCTCTGCTCTTTCTTTCACCTTCAGCAACCAAAGATGATGAACAGCTGTGGAATCCAACAAAACGCTTTTGAAGAGATGAGGAGAAACGCCGCCGTTTCTGATCGGAGAGACGCCGTGATTTGTCCTAAACCTCGTCGTGTTGGTGCTCTTAATCACCACTCTTCTCGATCTCTCCGTTGGCAACTCAATCATCAGATGGAATTATGTGAATCGAATTCAGGAAGTGAGATTTTGGATTTCATCCTCACAAAGGGTGGTGGTGGTGGTGGTGAGCAAGATCAGACGAGGACGGTGATGACGCCACCTCTGTTCTTTACAGGGTCACCTCCAAGTAGAGTTTCTAACCCATTAACAAAAGATTCGCTTTTTCGAGAAGAGCTTCTCATGGTGGCTTCTCCGAGTCCATCGACTCCACGAGCAACCAAACCGCAGCCACCGTCTTCTCCAAGGAACGGTAGTTGTGTTATGGCGGCGACGAGTTTCGGGAACAATCCTGTGGTTCGTGTTGTGGGGTTTGATTGTGACAGACGCAGCAGCAACAGGAGCATTTCGACTCTTGCATAAGAGTAGTCCAATATGCATATATATATAACAGAGAGAGTATTAAAAGAACAACTAAGAAAGGTTTAGGTATTGATTATGTGGGAGGGTTTTGTTGGTGAAAATGTGTAAATATGTTGAAAAAAAGTGGGGGGATTTATAAATGGGATTGTTATAAATTTAGGGTTTTGGTTTTGGGTGTCCATTTTCTAAAATTTTGTAATTAAAAAGGGGGGAGAGAGAGTGGTTAATTTGGTATCTTTAGTGGGAAATAAGAGCGTAGTGTAATCTTCCTTATTGTAACAAAAGGAAAGGCTCGAAAGAGTTTTGAAATGTAAAGATATCATTTCTCTGCCTTTATTTTTGTATATA'
# RNA = 'AT1G13390.1	0	0	0	0	AAAATTAAATTTCATAAGCAGAGAATTAAATATTTTTAGCTAAAATAAGCGTTTTGCTCTAAACACAAACAATTATACCTTGTTAGAGATATTAAGAAAAACAAATAAATAAATACTGATTCCATAGCATTTGTTGTCTGCAGGTTCTCTCTTTCCCTTAACCTCAAAAGCCATTTAGACTCTTCTTCTCTCTTTCAGATCTCTCTTCTTCTTCTGTTTCTTCTGCTCACGTAGAGCACAAACAAGCCAAGAACCATCTCTGCTCTTTCTTTCACCTTCAGCAACCAAAGATGATGAACAGCTGTGGAATCCAACAAAACGCTTTTGAAGAGATGAGGAGAAACGCCGCCGTTTCTGATCGGAGAGACGCCGTGATTTGTCCTAAACCTCGTCGTGTTGGTGCTCTTAATCACCACTCTTCTCGATCTCTCCGTTGGCAACTCAATCATCAGATGGAATTATGTGAATCGAATTCAGGAAGTGAGATTTTGGATTTCATCCTCACAAAGGGTGGTGGTGGTGGTGGTGAGCAAGATCAGACGAGGACGGTGATGACGCCACCTCTGTTCTTTACAGGGTCACCTCCAAGTAGAGTTTCTAACCCATTAACAAAAGATTCGCTTTTTCGAGAAGAGCTTCTCATGGTGGCTTCTCCGAGTCCATCGACTCCACGAGCAACCAAACCGCAGCCACCGTCTTCTCCAAGGAACGGTAGTTGTGTTATGGCGGCGACGAGTTTCGGGAACAATCCTGTGGTTCGTGTTGTGGGGTTTGATTGTGACAGACGCAGCAGCAACAGGAGCATTTCGACTCTTGCATAAGAGTAGTCCAATATGCATATATATATAACAGAGAGAGTATTAAAAGAACAACTAAGAAAGGTTTAGGTATTGATTATGTGGGAGGGTTTTGTTGGTGAAAATGTGTAAATATGTTGAAAAAAAGTGGGGGGATTTATAAATGAAATTGTTATAAATTTAAAGTTTTGGTTTTGGGTGTCCATTTTCTAAAATTTTGTAATTAAAAAGGGGGGAGAGAGAGTGGTTAATTTGGTATCTTTAGTGGGAAATAAGAGCGTAGTGTAATCTTCCTTATTGTAACAAAAGGAAAGGCTCGAAAGAGTTTTGAAATGTAAAGATATCATTTCTCTGCCTTTATTTTTGTATATA'
# results = rna_regressor.infer(RNA,
#                               print_result=True,
#                               ignore_error=True,
#                               )
